name: Builds Docker image and push to ACR

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      build_context:
        required: false
        type: string
        default: .
    secrets:
      GH_APP_ID:
        required: true
      GH_APP_INSTALLATION_ID:
        required: true
      GH_APP_PRIVATE_KEY:
        required: true
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_CLIENT_ID:
        required: true
      AZURE_CONTAINER_REGISTRY:
        required: true

jobs:
  acr-build:
    runs-on:
      group: ArcCI
    steps:
      - name: GitHub login
        id: auth
        uses: TimoWilhelm/action-github-app-auth@v1.0.0
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          installation-id: ${{ secrets.GH_APP_INSTALLATION_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
          set-git-credentials: true

      - name: Checkout
        uses: actions/checkout@v5
        with:
          token: ${{ steps.auth.outputs.access-token }}
          submodules: true

      # for pull base images
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Azure login
        uses: azure/login@v2
        with:
          auth-type: IDENTITY
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Login to ACR
        run: |
          az acr login --name ${{ secrets.AZURE_CONTAINER_REGISTRY }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ inputs.image_name }}

      - name: Build and push
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.build_context }}
          push: true
          secrets: |
            GIT_AUTH_TOKEN=${{ steps.auth.outputs.access-token }}
          tags: ${{ steps.meta.outputs.tags }}

      - name: Scan for vulnerabilities
        id: scan
        uses: crazy-max/ghaction-container-scan@v3
        continue-on-error: true
        env:
          TRIVY_SKIP_DIRS: "**/.venv"
        with:
          image: ${{ steps.meta.outputs.tags }}
          dockerfile: ${{ inputs.build_context }}/Dockerfile
          severity_threshold: HIGH
          annotations: true
